// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.canopy.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.canopy.api.CanopyApi;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CanopyApiModule_GetCanopyApiFactory implements Factory<CanopyApi> {
  private final CanopyApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public CanopyApiModule_GetCanopyApiFactory(CanopyApiModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public CanopyApi get() {
    return getCanopyApi(module, retrofitProvider.get());
  }

  public static CanopyApiModule_GetCanopyApiFactory create(CanopyApiModule module,
      Provider<Retrofit> retrofitProvider) {
    return new CanopyApiModule_GetCanopyApiFactory(module, retrofitProvider);
  }

  public static CanopyApi getCanopyApi(CanopyApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.getCanopyApi(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
