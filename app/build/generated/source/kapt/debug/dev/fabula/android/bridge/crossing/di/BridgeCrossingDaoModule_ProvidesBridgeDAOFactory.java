// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.bridge.crossing.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.app.db.AppRoomDatabase;
import dev.fabula.android.bridge.crossing.dao.BridgeCrossingDao;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BridgeCrossingDaoModule_ProvidesBridgeDAOFactory implements Factory<BridgeCrossingDao> {
  private final BridgeCrossingDaoModule module;

  private final Provider<AppRoomDatabase> appDatabaseProvider;

  public BridgeCrossingDaoModule_ProvidesBridgeDAOFactory(BridgeCrossingDaoModule module,
      Provider<AppRoomDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public BridgeCrossingDao get() {
    return providesBridgeDAO(module, appDatabaseProvider.get());
  }

  public static BridgeCrossingDaoModule_ProvidesBridgeDAOFactory create(
      BridgeCrossingDaoModule module, Provider<AppRoomDatabase> appDatabaseProvider) {
    return new BridgeCrossingDaoModule_ProvidesBridgeDAOFactory(module, appDatabaseProvider);
  }

  public static BridgeCrossingDao providesBridgeDAO(BridgeCrossingDaoModule instance,
      AppRoomDatabase appDatabase) {
    return Preconditions.checkNotNull(instance.providesBridgeDAO(appDatabase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
