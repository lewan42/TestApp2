// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.auth.ui;

import dagger.internal.Factory;
import dev.fabula.android.auth_old.AppAuth;
import dev.fabula.android.synchronize.repo.SyncRepository;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthViewModel_Factory implements Factory<AuthViewModel> {
  private final Provider<Retrofit> retrofitProvider;

  private final Provider<AppAuth> authProvider;

  private final Provider<SyncRepository> syncRepoProvider;

  public AuthViewModel_Factory(Provider<Retrofit> retrofitProvider, Provider<AppAuth> authProvider,
      Provider<SyncRepository> syncRepoProvider) {
    this.retrofitProvider = retrofitProvider;
    this.authProvider = authProvider;
    this.syncRepoProvider = syncRepoProvider;
  }

  @Override
  public AuthViewModel get() {
    return newInstance(retrofitProvider.get(), authProvider.get(), syncRepoProvider.get());
  }

  public static AuthViewModel_Factory create(Provider<Retrofit> retrofitProvider,
      Provider<AppAuth> authProvider, Provider<SyncRepository> syncRepoProvider) {
    return new AuthViewModel_Factory(retrofitProvider, authProvider, syncRepoProvider);
  }

  public static AuthViewModel newInstance(Retrofit retrofit, AppAuth auth,
      SyncRepository syncRepo) {
    return new AuthViewModel(retrofit, auth, syncRepo);
  }
}
