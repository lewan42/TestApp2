// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.synchronize.repo;

import dagger.internal.Factory;
import dev.fabula.android.auth_old.AppAuth;
import dev.fabula.android.bridge.crossing.api.BridgeApi;
import dev.fabula.android.bridge.crossing.dao.BridgeCrossingDao;
import dev.fabula.android.canopy.api.CanopyApi;
import dev.fabula.android.canopy.dao.CanopyDao;
import dev.fabula.android.dimensions.fence.api.DimensionFenceAPI;
import dev.fabula.android.dimensions.fence.dao.DimensionsFenceDao;
import dev.fabula.android.measurements.create.api.CreateMeasurementsApi;
import dev.fabula.android.measurements.create.dao.CreateMeasurementsDao;
import dev.fabula.android.measurements.type.dao.MeasurementTypeDao;
import dev.fabula.android.platform.api.PlatformApi;
import dev.fabula.android.platform.dao.PlatformDao;
import dev.fabula.android.railway.dao.RailwayDao;
import dev.fabula.android.section.dao.RailwaySectionDao;
import dev.fabula.android.station.peregon.api.StationApi;
import dev.fabula.android.station.peregon.dao.StationPeregonDao;
import dev.fabula.android.support.api.SupportApi;
import dev.fabula.android.support.dao.SupportDao;
import dev.fabula.android.synchronize.api.SyncApi;
import dev.fabula.android.wire.carrier.api.CarrierWireApi;
import dev.fabula.android.wire.carrier.dao.CarrierWireDao;
import dev.fabula.android.wire.contact.api.ContactWireApi;
import dev.fabula.android.wire.contact.dao.ContactWireDao;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SyncRepository_Factory implements Factory<SyncRepository> {
  private final Provider<AppAuth> authProvider;

  private final Provider<SyncApi> syncApiProvider;

  private final Provider<RailwayDao> railwayDaoProvider;

  private final Provider<RailwaySectionDao> railwaySectionDaoProvider;

  private final Provider<StationPeregonDao> stationPeregonDaoProvider;

  private final Provider<PlatformDao> platformDaoProvider;

  private final Provider<SupportDao> supportDaoProvider;

  private final Provider<CreateMeasurementsDao> createMeasurementsDaoProvider;

  private final Provider<BridgeCrossingDao> bridgeCrossingDaoProvider;

  private final Provider<DimensionsFenceDao> dimensionsFenceDaoProvider;

  private final Provider<CanopyDao> canopyDaoProvider;

  private final Provider<ContactWireDao> contactWireDaoProvider;

  private final Provider<CarrierWireDao> carrierWireDaoProvider;

  private final Provider<StationApi> stationApiProvider;

  private final Provider<PlatformApi> platformApiProvider;

  private final Provider<CreateMeasurementsApi> createMeasurementsApiProvider;

  private final Provider<DimensionFenceAPI> dimensionFenceAPIProvider;

  private final Provider<ContactWireApi> contactWireApiProvider;

  private final Provider<CarrierWireApi> carrierWireApiProvider;

  private final Provider<MeasurementTypeDao> measurementTypeDaoProvider;

  private final Provider<CanopyApi> canopyApiProvider;

  private final Provider<SupportApi> supportApiProvider;

  private final Provider<BridgeApi> bridgeApiProvider;

  public SyncRepository_Factory(Provider<AppAuth> authProvider, Provider<SyncApi> syncApiProvider,
      Provider<RailwayDao> railwayDaoProvider,
      Provider<RailwaySectionDao> railwaySectionDaoProvider,
      Provider<StationPeregonDao> stationPeregonDaoProvider,
      Provider<PlatformDao> platformDaoProvider, Provider<SupportDao> supportDaoProvider,
      Provider<CreateMeasurementsDao> createMeasurementsDaoProvider,
      Provider<BridgeCrossingDao> bridgeCrossingDaoProvider,
      Provider<DimensionsFenceDao> dimensionsFenceDaoProvider,
      Provider<CanopyDao> canopyDaoProvider, Provider<ContactWireDao> contactWireDaoProvider,
      Provider<CarrierWireDao> carrierWireDaoProvider, Provider<StationApi> stationApiProvider,
      Provider<PlatformApi> platformApiProvider,
      Provider<CreateMeasurementsApi> createMeasurementsApiProvider,
      Provider<DimensionFenceAPI> dimensionFenceAPIProvider,
      Provider<ContactWireApi> contactWireApiProvider,
      Provider<CarrierWireApi> carrierWireApiProvider,
      Provider<MeasurementTypeDao> measurementTypeDaoProvider,
      Provider<CanopyApi> canopyApiProvider, Provider<SupportApi> supportApiProvider,
      Provider<BridgeApi> bridgeApiProvider) {
    this.authProvider = authProvider;
    this.syncApiProvider = syncApiProvider;
    this.railwayDaoProvider = railwayDaoProvider;
    this.railwaySectionDaoProvider = railwaySectionDaoProvider;
    this.stationPeregonDaoProvider = stationPeregonDaoProvider;
    this.platformDaoProvider = platformDaoProvider;
    this.supportDaoProvider = supportDaoProvider;
    this.createMeasurementsDaoProvider = createMeasurementsDaoProvider;
    this.bridgeCrossingDaoProvider = bridgeCrossingDaoProvider;
    this.dimensionsFenceDaoProvider = dimensionsFenceDaoProvider;
    this.canopyDaoProvider = canopyDaoProvider;
    this.contactWireDaoProvider = contactWireDaoProvider;
    this.carrierWireDaoProvider = carrierWireDaoProvider;
    this.stationApiProvider = stationApiProvider;
    this.platformApiProvider = platformApiProvider;
    this.createMeasurementsApiProvider = createMeasurementsApiProvider;
    this.dimensionFenceAPIProvider = dimensionFenceAPIProvider;
    this.contactWireApiProvider = contactWireApiProvider;
    this.carrierWireApiProvider = carrierWireApiProvider;
    this.measurementTypeDaoProvider = measurementTypeDaoProvider;
    this.canopyApiProvider = canopyApiProvider;
    this.supportApiProvider = supportApiProvider;
    this.bridgeApiProvider = bridgeApiProvider;
  }

  @Override
  public SyncRepository get() {
    return newInstance(authProvider.get(), syncApiProvider.get(), railwayDaoProvider.get(), railwaySectionDaoProvider.get(), stationPeregonDaoProvider.get(), platformDaoProvider.get(), supportDaoProvider.get(), createMeasurementsDaoProvider.get(), bridgeCrossingDaoProvider.get(), dimensionsFenceDaoProvider.get(), canopyDaoProvider.get(), contactWireDaoProvider.get(), carrierWireDaoProvider.get(), stationApiProvider.get(), platformApiProvider.get(), createMeasurementsApiProvider.get(), dimensionFenceAPIProvider.get(), contactWireApiProvider.get(), carrierWireApiProvider.get(), measurementTypeDaoProvider.get(), canopyApiProvider.get(), supportApiProvider.get(), bridgeApiProvider.get());
  }

  public static SyncRepository_Factory create(Provider<AppAuth> authProvider,
      Provider<SyncApi> syncApiProvider, Provider<RailwayDao> railwayDaoProvider,
      Provider<RailwaySectionDao> railwaySectionDaoProvider,
      Provider<StationPeregonDao> stationPeregonDaoProvider,
      Provider<PlatformDao> platformDaoProvider, Provider<SupportDao> supportDaoProvider,
      Provider<CreateMeasurementsDao> createMeasurementsDaoProvider,
      Provider<BridgeCrossingDao> bridgeCrossingDaoProvider,
      Provider<DimensionsFenceDao> dimensionsFenceDaoProvider,
      Provider<CanopyDao> canopyDaoProvider, Provider<ContactWireDao> contactWireDaoProvider,
      Provider<CarrierWireDao> carrierWireDaoProvider, Provider<StationApi> stationApiProvider,
      Provider<PlatformApi> platformApiProvider,
      Provider<CreateMeasurementsApi> createMeasurementsApiProvider,
      Provider<DimensionFenceAPI> dimensionFenceAPIProvider,
      Provider<ContactWireApi> contactWireApiProvider,
      Provider<CarrierWireApi> carrierWireApiProvider,
      Provider<MeasurementTypeDao> measurementTypeDaoProvider,
      Provider<CanopyApi> canopyApiProvider, Provider<SupportApi> supportApiProvider,
      Provider<BridgeApi> bridgeApiProvider) {
    return new SyncRepository_Factory(authProvider, syncApiProvider, railwayDaoProvider, railwaySectionDaoProvider, stationPeregonDaoProvider, platformDaoProvider, supportDaoProvider, createMeasurementsDaoProvider, bridgeCrossingDaoProvider, dimensionsFenceDaoProvider, canopyDaoProvider, contactWireDaoProvider, carrierWireDaoProvider, stationApiProvider, platformApiProvider, createMeasurementsApiProvider, dimensionFenceAPIProvider, contactWireApiProvider, carrierWireApiProvider, measurementTypeDaoProvider, canopyApiProvider, supportApiProvider, bridgeApiProvider);
  }

  public static SyncRepository newInstance(AppAuth auth, SyncApi syncApi, RailwayDao railwayDao,
      RailwaySectionDao railwaySectionDao, StationPeregonDao stationPeregonDao,
      PlatformDao platformDao, SupportDao supportDao, CreateMeasurementsDao createMeasurementsDao,
      BridgeCrossingDao bridgeCrossingDao, DimensionsFenceDao dimensionsFenceDao,
      CanopyDao canopyDao, ContactWireDao contactWireDao, CarrierWireDao carrierWireDao,
      StationApi stationApi, PlatformApi platformApi, CreateMeasurementsApi createMeasurementsApi,
      DimensionFenceAPI dimensionFenceAPI, ContactWireApi contactWireApi,
      CarrierWireApi carrierWireApi, MeasurementTypeDao measurementTypeDao, CanopyApi canopyApi,
      SupportApi supportApi, BridgeApi bridgeApi) {
    return new SyncRepository(auth, syncApi, railwayDao, railwaySectionDao, stationPeregonDao, platformDao, supportDao, createMeasurementsDao, bridgeCrossingDao, dimensionsFenceDao, canopyDao, contactWireDao, carrierWireDao, stationApi, platformApi, createMeasurementsApi, dimensionFenceAPI, contactWireApi, carrierWireApi, measurementTypeDao, canopyApi, supportApi, bridgeApi);
  }
}
