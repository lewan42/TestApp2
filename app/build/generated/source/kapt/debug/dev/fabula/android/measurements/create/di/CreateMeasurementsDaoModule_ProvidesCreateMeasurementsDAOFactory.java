// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.measurements.create.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.app.db.AppRoomDatabase;
import dev.fabula.android.measurements.create.dao.CreateMeasurementsDao;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CreateMeasurementsDaoModule_ProvidesCreateMeasurementsDAOFactory implements Factory<CreateMeasurementsDao> {
  private final CreateMeasurementsDaoModule module;

  private final Provider<AppRoomDatabase> appDatabaseProvider;

  public CreateMeasurementsDaoModule_ProvidesCreateMeasurementsDAOFactory(
      CreateMeasurementsDaoModule module, Provider<AppRoomDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public CreateMeasurementsDao get() {
    return providesCreateMeasurementsDAO(module, appDatabaseProvider.get());
  }

  public static CreateMeasurementsDaoModule_ProvidesCreateMeasurementsDAOFactory create(
      CreateMeasurementsDaoModule module, Provider<AppRoomDatabase> appDatabaseProvider) {
    return new CreateMeasurementsDaoModule_ProvidesCreateMeasurementsDAOFactory(module, appDatabaseProvider);
  }

  public static CreateMeasurementsDao providesCreateMeasurementsDAO(
      CreateMeasurementsDaoModule instance, AppRoomDatabase appDatabase) {
    return Preconditions.checkNotNull(instance.providesCreateMeasurementsDAO(appDatabase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
