// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.measurements.union.list.di;

import androidx.lifecycle.ViewModel;
import dagger.internal.Preconditions;
import dev.fabula.android.app.db.AppRoomDatabase;
import dev.fabula.android.app.di.AppComponent;
import dev.fabula.android.app.di.ViewModelFactory;
import dev.fabula.android.app.ui.ViewModelFragment_MembersInjector;
import dev.fabula.android.bosch.otg.data.source.BoschOtgDataSource;
import dev.fabula.android.bosch.otg.di.BoschOtgModuleDataSource;
import dev.fabula.android.bosch.otg.di.BoschOtgModuleDataSource_ProvidesBoschOtgDAOFactory;
import dev.fabula.android.measurements.create.dao.CreateMeasurementsDao;
import dev.fabula.android.measurements.create.di.CreateMeasurementsDaoModule;
import dev.fabula.android.measurements.create.di.CreateMeasurementsDaoModule_ProvidesCreateMeasurementsDAOFactory;
import dev.fabula.android.measurements.union.list.repo.UnionMeasurementsRepository;
import dev.fabula.android.measurements.union.list.repo.UnionMeasurementsRepository_Factory;
import dev.fabula.android.measurements.union.list.ui.UnionMeasurementsListFragment;
import dev.fabula.android.measurements.union.list.ui.UnionMeasurementsListViewModel;
import dev.fabula.android.measurements.union.list.ui.UnionMeasurementsListViewModel_Factory;
import java.util.Collections;
import java.util.Map;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerUnionMeasurementsListComponent implements UnionMeasurementsListComponent {
  private Provider<AppRoomDatabase> providesRoomDatabaseProvider;

  private Provider<CreateMeasurementsDao> providesCreateMeasurementsDAOProvider;

  private Provider<BoschOtgDataSource> providesBoschOtgDAOProvider;

  private Provider<UnionMeasurementsRepository> unionMeasurementsRepositoryProvider;

  private Provider<UnionMeasurementsListViewModel> unionMeasurementsListViewModelProvider;

  private DaggerUnionMeasurementsListComponent(
      CreateMeasurementsDaoModule createMeasurementsDaoModuleParam,
      BoschOtgModuleDataSource boschOtgModuleDataSourceParam, AppComponent appComponentParam) {

    initialize(createMeasurementsDaoModuleParam, boschOtgModuleDataSourceParam, appComponentParam);
  }

  public static Builder builder() {
    return new Builder();
  }

  private Map<Class<? extends ViewModel>, Provider<ViewModel>> getMapOfClassOfAndProviderOfViewModel(
      ) {
    return Collections.<Class<? extends ViewModel>, Provider<ViewModel>>singletonMap(UnionMeasurementsListViewModel.class, (Provider) unionMeasurementsListViewModelProvider);
  }

  private ViewModelFactory getViewModelFactory() {
    return new ViewModelFactory(getMapOfClassOfAndProviderOfViewModel());
  }

  @SuppressWarnings("unchecked")
  private void initialize(final CreateMeasurementsDaoModule createMeasurementsDaoModuleParam,
      final BoschOtgModuleDataSource boschOtgModuleDataSourceParam,
      final AppComponent appComponentParam) {
    this.providesRoomDatabaseProvider = new dev_fabula_android_app_di_AppComponent_providesRoomDatabase(appComponentParam);
    this.providesCreateMeasurementsDAOProvider = CreateMeasurementsDaoModule_ProvidesCreateMeasurementsDAOFactory.create(createMeasurementsDaoModuleParam, providesRoomDatabaseProvider);
    this.providesBoschOtgDAOProvider = BoschOtgModuleDataSource_ProvidesBoschOtgDAOFactory.create(boschOtgModuleDataSourceParam);
    this.unionMeasurementsRepositoryProvider = UnionMeasurementsRepository_Factory.create(providesCreateMeasurementsDAOProvider, providesBoschOtgDAOProvider);
    this.unionMeasurementsListViewModelProvider = UnionMeasurementsListViewModel_Factory.create(unionMeasurementsRepositoryProvider);
  }

  @Override
  public void inject(UnionMeasurementsListFragment fragment) {
    injectUnionMeasurementsListFragment(fragment);
  }

  private UnionMeasurementsListFragment injectUnionMeasurementsListFragment(
      UnionMeasurementsListFragment instance) {
    ViewModelFragment_MembersInjector.injectViewModelFactory(instance, getViewModelFactory());
    return instance;
  }

  public static final class Builder {
    private CreateMeasurementsDaoModule createMeasurementsDaoModule;

    private BoschOtgModuleDataSource boschOtgModuleDataSource;

    private AppComponent appComponent;

    private Builder() {
    }

    public Builder createMeasurementsDaoModule(
        CreateMeasurementsDaoModule createMeasurementsDaoModule) {
      this.createMeasurementsDaoModule = Preconditions.checkNotNull(createMeasurementsDaoModule);
      return this;
    }

    public Builder boschOtgModuleDataSource(BoschOtgModuleDataSource boschOtgModuleDataSource) {
      this.boschOtgModuleDataSource = Preconditions.checkNotNull(boschOtgModuleDataSource);
      return this;
    }

    public Builder appComponent(AppComponent appComponent) {
      this.appComponent = Preconditions.checkNotNull(appComponent);
      return this;
    }

    public UnionMeasurementsListComponent build() {
      if (createMeasurementsDaoModule == null) {
        this.createMeasurementsDaoModule = new CreateMeasurementsDaoModule();
      }
      if (boschOtgModuleDataSource == null) {
        this.boschOtgModuleDataSource = new BoschOtgModuleDataSource();
      }
      Preconditions.checkBuilderRequirement(appComponent, AppComponent.class);
      return new DaggerUnionMeasurementsListComponent(createMeasurementsDaoModule, boschOtgModuleDataSource, appComponent);
    }
  }

  private static class dev_fabula_android_app_di_AppComponent_providesRoomDatabase implements Provider<AppRoomDatabase> {
    private final AppComponent appComponent;

    dev_fabula_android_app_di_AppComponent_providesRoomDatabase(AppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public AppRoomDatabase get() {
      return Preconditions.checkNotNull(appComponent.providesRoomDatabase(), "Cannot return null from a non-@Nullable component method");
    }
  }
}
