// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.synchronize.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.synchronize.api.SyncApi;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SyncApiModule_GetSyncApiFactory implements Factory<SyncApi> {
  private final SyncApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public SyncApiModule_GetSyncApiFactory(SyncApiModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public SyncApi get() {
    return getSyncApi(module, retrofitProvider.get());
  }

  public static SyncApiModule_GetSyncApiFactory create(SyncApiModule module,
      Provider<Retrofit> retrofitProvider) {
    return new SyncApiModule_GetSyncApiFactory(module, retrofitProvider);
  }

  public static SyncApi getSyncApi(SyncApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.getSyncApi(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
