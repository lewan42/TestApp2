// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.measurements.create.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.measurements.create.api.CreateMeasurementsApi;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CreateMeasurementsApiModule_GetMeasurementApiFactory implements Factory<CreateMeasurementsApi> {
  private final CreateMeasurementsApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public CreateMeasurementsApiModule_GetMeasurementApiFactory(CreateMeasurementsApiModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public CreateMeasurementsApi get() {
    return getMeasurementApi(module, retrofitProvider.get());
  }

  public static CreateMeasurementsApiModule_GetMeasurementApiFactory create(
      CreateMeasurementsApiModule module, Provider<Retrofit> retrofitProvider) {
    return new CreateMeasurementsApiModule_GetMeasurementApiFactory(module, retrofitProvider);
  }

  public static CreateMeasurementsApi getMeasurementApi(CreateMeasurementsApiModule instance,
      Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.getMeasurementApi(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
