// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.support.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.support.api.SupportApi;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SupportApiModule_GetSupportApiFactory implements Factory<SupportApi> {
  private final SupportApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public SupportApiModule_GetSupportApiFactory(SupportApiModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public SupportApi get() {
    return getSupportApi(module, retrofitProvider.get());
  }

  public static SupportApiModule_GetSupportApiFactory create(SupportApiModule module,
      Provider<Retrofit> retrofitProvider) {
    return new SupportApiModule_GetSupportApiFactory(module, retrofitProvider);
  }

  public static SupportApi getSupportApi(SupportApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.getSupportApi(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
