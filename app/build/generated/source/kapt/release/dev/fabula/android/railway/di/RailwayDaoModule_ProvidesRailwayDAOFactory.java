// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.railway.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.app.db.AppRoomDatabase;
import dev.fabula.android.railway.dao.RailwayDao;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RailwayDaoModule_ProvidesRailwayDAOFactory implements Factory<RailwayDao> {
  private final RailwayDaoModule module;

  private final Provider<AppRoomDatabase> appDatabaseProvider;

  public RailwayDaoModule_ProvidesRailwayDAOFactory(RailwayDaoModule module,
      Provider<AppRoomDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public RailwayDao get() {
    return providesRailwayDAO(module, appDatabaseProvider.get());
  }

  public static RailwayDaoModule_ProvidesRailwayDAOFactory create(RailwayDaoModule module,
      Provider<AppRoomDatabase> appDatabaseProvider) {
    return new RailwayDaoModule_ProvidesRailwayDAOFactory(module, appDatabaseProvider);
  }

  public static RailwayDao providesRailwayDAO(RailwayDaoModule instance,
      AppRoomDatabase appDatabase) {
    return Preconditions.checkNotNull(instance.providesRailwayDAO(appDatabase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
