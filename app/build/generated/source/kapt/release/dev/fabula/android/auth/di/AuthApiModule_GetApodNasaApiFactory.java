// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.auth.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.auth.remote.AuthService;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthApiModule_GetApodNasaApiFactory implements Factory<AuthService> {
  private final AuthApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public AuthApiModule_GetApodNasaApiFactory(AuthApiModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public AuthService get() {
    return getApodNasaApi(module, retrofitProvider.get());
  }

  public static AuthApiModule_GetApodNasaApiFactory create(AuthApiModule module,
      Provider<Retrofit> retrofitProvider) {
    return new AuthApiModule_GetApodNasaApiFactory(module, retrofitProvider);
  }

  public static AuthService getApodNasaApi(AuthApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.getApodNasaApi(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
