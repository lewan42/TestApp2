// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.bridge.crossing.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.bridge.crossing.api.BridgeApi;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BridgeApiModule_GetBridgeApiFactory implements Factory<BridgeApi> {
  private final BridgeApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public BridgeApiModule_GetBridgeApiFactory(BridgeApiModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public BridgeApi get() {
    return getBridgeApi(module, retrofitProvider.get());
  }

  public static BridgeApiModule_GetBridgeApiFactory create(BridgeApiModule module,
      Provider<Retrofit> retrofitProvider) {
    return new BridgeApiModule_GetBridgeApiFactory(module, retrofitProvider);
  }

  public static BridgeApi getBridgeApi(BridgeApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.getBridgeApi(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
