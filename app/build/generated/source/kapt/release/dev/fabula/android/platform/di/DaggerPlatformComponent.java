// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.platform.di;

import androidx.lifecycle.ViewModel;
import dagger.internal.Preconditions;
import dev.fabula.android.app.db.AppRoomDatabase;
import dev.fabula.android.app.di.AppComponent;
import dev.fabula.android.app.di.ViewModelFactory;
import dev.fabula.android.app.ui.ViewModelFragment_MembersInjector;
import dev.fabula.android.canopy.dao.CanopyDao;
import dev.fabula.android.canopy.di.CanopyDaoModule;
import dev.fabula.android.canopy.di.CanopyDaoModule_ProvidesPlatformDAOFactory;
import dev.fabula.android.platform.dao.PlatformDao;
import dev.fabula.android.platform.repo.PlatformRepository;
import dev.fabula.android.platform.repo.PlatformRepository_Factory;
import dev.fabula.android.platform.ui.PlatformFragment;
import dev.fabula.android.platform.ui.PlatformViewModule;
import dev.fabula.android.platform.ui.PlatformViewModule_Factory;
import dev.fabula.android.support.dao.SupportDao;
import dev.fabula.android.support.di.SupportDaoModule;
import dev.fabula.android.support.di.SupportDaoModule_ProvidesSupportDAOFactory;
import java.util.Collections;
import java.util.Map;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerPlatformComponent implements PlatformComponent {
  private Provider<AppRoomDatabase> providesRoomDatabaseProvider;

  private Provider<PlatformDao> providesPlatformDAOProvider;

  private Provider<CanopyDao> providesPlatformDAOProvider2;

  private Provider<SupportDao> providesSupportDAOProvider;

  private Provider<PlatformRepository> platformRepositoryProvider;

  private Provider<PlatformViewModule> platformViewModuleProvider;

  private DaggerPlatformComponent(PlatformDaoModule platformDaoModuleParam,
      CanopyDaoModule canopyDaoModuleParam, SupportDaoModule supportDaoModuleParam,
      AppComponent appComponentParam) {

    initialize(platformDaoModuleParam, canopyDaoModuleParam, supportDaoModuleParam, appComponentParam);
  }

  public static Builder builder() {
    return new Builder();
  }

  private Map<Class<? extends ViewModel>, Provider<ViewModel>> getMapOfClassOfAndProviderOfViewModel(
      ) {
    return Collections.<Class<? extends ViewModel>, Provider<ViewModel>>singletonMap(PlatformViewModule.class, (Provider) platformViewModuleProvider);
  }

  private ViewModelFactory getViewModelFactory() {
    return new ViewModelFactory(getMapOfClassOfAndProviderOfViewModel());
  }

  @SuppressWarnings("unchecked")
  private void initialize(final PlatformDaoModule platformDaoModuleParam,
      final CanopyDaoModule canopyDaoModuleParam, final SupportDaoModule supportDaoModuleParam,
      final AppComponent appComponentParam) {
    this.providesRoomDatabaseProvider = new dev_fabula_android_app_di_AppComponent_providesRoomDatabase(appComponentParam);
    this.providesPlatformDAOProvider = PlatformDaoModule_ProvidesPlatformDAOFactory.create(platformDaoModuleParam, providesRoomDatabaseProvider);
    this.providesPlatformDAOProvider2 = CanopyDaoModule_ProvidesPlatformDAOFactory.create(canopyDaoModuleParam, providesRoomDatabaseProvider);
    this.providesSupportDAOProvider = SupportDaoModule_ProvidesSupportDAOFactory.create(supportDaoModuleParam, providesRoomDatabaseProvider);
    this.platformRepositoryProvider = PlatformRepository_Factory.create(providesPlatformDAOProvider, providesPlatformDAOProvider2, providesSupportDAOProvider);
    this.platformViewModuleProvider = PlatformViewModule_Factory.create(platformRepositoryProvider);
  }

  @Override
  public void inject(PlatformFragment fragment) {
    injectPlatformFragment(fragment);
  }

  private PlatformFragment injectPlatformFragment(PlatformFragment instance) {
    ViewModelFragment_MembersInjector.injectViewModelFactory(instance, getViewModelFactory());
    return instance;
  }

  public static final class Builder {
    private PlatformDaoModule platformDaoModule;

    private CanopyDaoModule canopyDaoModule;

    private SupportDaoModule supportDaoModule;

    private AppComponent appComponent;

    private Builder() {
    }

    public Builder platformDaoModule(PlatformDaoModule platformDaoModule) {
      this.platformDaoModule = Preconditions.checkNotNull(platformDaoModule);
      return this;
    }

    public Builder canopyDaoModule(CanopyDaoModule canopyDaoModule) {
      this.canopyDaoModule = Preconditions.checkNotNull(canopyDaoModule);
      return this;
    }

    public Builder supportDaoModule(SupportDaoModule supportDaoModule) {
      this.supportDaoModule = Preconditions.checkNotNull(supportDaoModule);
      return this;
    }

    public Builder appComponent(AppComponent appComponent) {
      this.appComponent = Preconditions.checkNotNull(appComponent);
      return this;
    }

    public PlatformComponent build() {
      if (platformDaoModule == null) {
        this.platformDaoModule = new PlatformDaoModule();
      }
      if (canopyDaoModule == null) {
        this.canopyDaoModule = new CanopyDaoModule();
      }
      if (supportDaoModule == null) {
        this.supportDaoModule = new SupportDaoModule();
      }
      Preconditions.checkBuilderRequirement(appComponent, AppComponent.class);
      return new DaggerPlatformComponent(platformDaoModule, canopyDaoModule, supportDaoModule, appComponent);
    }
  }

  private static class dev_fabula_android_app_di_AppComponent_providesRoomDatabase implements Provider<AppRoomDatabase> {
    private final AppComponent appComponent;

    dev_fabula_android_app_di_AppComponent_providesRoomDatabase(AppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public AppRoomDatabase get() {
      return Preconditions.checkNotNull(appComponent.providesRoomDatabase(), "Cannot return null from a non-@Nullable component method");
    }
  }
}
