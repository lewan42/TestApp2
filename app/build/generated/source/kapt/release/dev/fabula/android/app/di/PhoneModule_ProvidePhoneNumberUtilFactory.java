// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.app.di;

import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.michaelrocks.libphonenumber.android.PhoneNumberUtil;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PhoneModule_ProvidePhoneNumberUtilFactory implements Factory<PhoneNumberUtil> {
  private final PhoneModule module;

  private final Provider<Context> contextProvider;

  public PhoneModule_ProvidePhoneNumberUtilFactory(PhoneModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public PhoneNumberUtil get() {
    return providePhoneNumberUtil(module, contextProvider.get());
  }

  public static PhoneModule_ProvidePhoneNumberUtilFactory create(PhoneModule module,
      Provider<Context> contextProvider) {
    return new PhoneModule_ProvidePhoneNumberUtilFactory(module, contextProvider);
  }

  public static PhoneNumberUtil providePhoneNumberUtil(PhoneModule instance, Context context) {
    return Preconditions.checkNotNull(instance.providePhoneNumberUtil(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
