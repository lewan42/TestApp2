// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.measurements.type.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.app.db.AppRoomDatabase;
import dev.fabula.android.measurements.type.dao.MeasurementTypeDao;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MeasurementTypeDaoModule_ProvidesMeasurementTypeDAOFactory implements Factory<MeasurementTypeDao> {
  private final MeasurementTypeDaoModule module;

  private final Provider<AppRoomDatabase> appDatabaseProvider;

  public MeasurementTypeDaoModule_ProvidesMeasurementTypeDAOFactory(MeasurementTypeDaoModule module,
      Provider<AppRoomDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public MeasurementTypeDao get() {
    return providesMeasurementTypeDAO(module, appDatabaseProvider.get());
  }

  public static MeasurementTypeDaoModule_ProvidesMeasurementTypeDAOFactory create(
      MeasurementTypeDaoModule module, Provider<AppRoomDatabase> appDatabaseProvider) {
    return new MeasurementTypeDaoModule_ProvidesMeasurementTypeDAOFactory(module, appDatabaseProvider);
  }

  public static MeasurementTypeDao providesMeasurementTypeDAO(MeasurementTypeDaoModule instance,
      AppRoomDatabase appDatabase) {
    return Preconditions.checkNotNull(instance.providesMeasurementTypeDAO(appDatabase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
