// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.auth_old;

import androidx.lifecycle.ViewModelProvider;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import dev.fabula.android.app.ui.ViewModelFragment_MembersInjector;
import io.michaelrocks.libphonenumber.android.PhoneNumberUtil;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthFragmentPhone_MembersInjector implements MembersInjector<AuthFragmentPhone> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<PhoneNumberUtil> phoneUtilProvider;

  public AuthFragmentPhone_MembersInjector(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<PhoneNumberUtil> phoneUtilProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.phoneUtilProvider = phoneUtilProvider;
  }

  public static MembersInjector<AuthFragmentPhone> create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<PhoneNumberUtil> phoneUtilProvider) {
    return new AuthFragmentPhone_MembersInjector(viewModelFactoryProvider, phoneUtilProvider);
  }

  @Override
  public void injectMembers(AuthFragmentPhone instance) {
    ViewModelFragment_MembersInjector.injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectPhoneUtil(instance, phoneUtilProvider.get());
  }

  @InjectedFieldSignature("dev.fabula.android.auth_old.AuthFragmentPhone.phoneUtil")
  public static void injectPhoneUtil(AuthFragmentPhone instance, PhoneNumberUtil phoneUtil) {
    instance.phoneUtil = phoneUtil;
  }
}
