// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.wire.contact.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.app.db.AppRoomDatabase;
import dev.fabula.android.wire.contact.dao.ContactWireDao;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ContactWireDaoModule_ProvidesContactWireDAOFactory implements Factory<ContactWireDao> {
  private final ContactWireDaoModule module;

  private final Provider<AppRoomDatabase> appDatabaseProvider;

  public ContactWireDaoModule_ProvidesContactWireDAOFactory(ContactWireDaoModule module,
      Provider<AppRoomDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public ContactWireDao get() {
    return providesContactWireDAO(module, appDatabaseProvider.get());
  }

  public static ContactWireDaoModule_ProvidesContactWireDAOFactory create(
      ContactWireDaoModule module, Provider<AppRoomDatabase> appDatabaseProvider) {
    return new ContactWireDaoModule_ProvidesContactWireDAOFactory(module, appDatabaseProvider);
  }

  public static ContactWireDao providesContactWireDAO(ContactWireDaoModule instance,
      AppRoomDatabase appDatabase) {
    return Preconditions.checkNotNull(instance.providesContactWireDAO(appDatabase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
