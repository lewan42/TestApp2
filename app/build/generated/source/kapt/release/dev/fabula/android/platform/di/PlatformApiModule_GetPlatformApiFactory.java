// Generated by Dagger (https://dagger.dev).
package dev.fabula.android.platform.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.fabula.android.platform.api.PlatformApi;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PlatformApiModule_GetPlatformApiFactory implements Factory<PlatformApi> {
  private final PlatformApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public PlatformApiModule_GetPlatformApiFactory(PlatformApiModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public PlatformApi get() {
    return getPlatformApi(module, retrofitProvider.get());
  }

  public static PlatformApiModule_GetPlatformApiFactory create(PlatformApiModule module,
      Provider<Retrofit> retrofitProvider) {
    return new PlatformApiModule_GetPlatformApiFactory(module, retrofitProvider);
  }

  public static PlatformApi getPlatformApi(PlatformApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.getPlatformApi(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
