// Generated by view binder compiler. Do not edit!
package dev.fabula.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import dev.fabula.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CalibrationDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText angle;

  @NonNull
  public final TextInputLayout angleContainer;

  @NonNull
  public final TextInputEditText height;

  @NonNull
  public final TextInputLayout heightContainer;

  @NonNull
  public final TextInputLayout legthContainer;

  @NonNull
  public final TextInputEditText length;

  private CalibrationDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText angle, @NonNull TextInputLayout angleContainer,
      @NonNull TextInputEditText height, @NonNull TextInputLayout heightContainer,
      @NonNull TextInputLayout legthContainer, @NonNull TextInputEditText length) {
    this.rootView = rootView;
    this.angle = angle;
    this.angleContainer = angleContainer;
    this.height = height;
    this.heightContainer = heightContainer;
    this.legthContainer = legthContainer;
    this.length = length;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CalibrationDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CalibrationDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.calibration_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CalibrationDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.angle;
      TextInputEditText angle = rootView.findViewById(id);
      if (angle == null) {
        break missingId;
      }

      id = R.id.angle_container;
      TextInputLayout angleContainer = rootView.findViewById(id);
      if (angleContainer == null) {
        break missingId;
      }

      id = R.id.height;
      TextInputEditText height = rootView.findViewById(id);
      if (height == null) {
        break missingId;
      }

      id = R.id.height_container;
      TextInputLayout heightContainer = rootView.findViewById(id);
      if (heightContainer == null) {
        break missingId;
      }

      id = R.id.legth_container;
      TextInputLayout legthContainer = rootView.findViewById(id);
      if (legthContainer == null) {
        break missingId;
      }

      id = R.id.length;
      TextInputEditText length = rootView.findViewById(id);
      if (length == null) {
        break missingId;
      }

      return new CalibrationDialogBinding((ConstraintLayout) rootView, angle, angleContainer,
          height, heightContainer, legthContainer, length);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
