// Generated by view binder compiler. Do not edit!
package dev.fabula.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import dev.fabula.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AuthFragmentBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnSingIn;

  @NonNull
  public final TextInputEditText email;

  @NonNull
  public final TextInputLayout emailContainer;

  @NonNull
  public final ImageView imageLogo;

  @NonNull
  public final TextInputEditText password;

  @NonNull
  public final TextInputLayout passwordContainer;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ScrollView scroll;

  private AuthFragmentBinding(@NonNull ScrollView rootView, @NonNull Button btnSingIn,
      @NonNull TextInputEditText email, @NonNull TextInputLayout emailContainer,
      @NonNull ImageView imageLogo, @NonNull TextInputEditText password,
      @NonNull TextInputLayout passwordContainer, @NonNull ProgressBar progressBar,
      @NonNull ScrollView scroll) {
    this.rootView = rootView;
    this.btnSingIn = btnSingIn;
    this.email = email;
    this.emailContainer = emailContainer;
    this.imageLogo = imageLogo;
    this.password = password;
    this.passwordContainer = passwordContainer;
    this.progressBar = progressBar;
    this.scroll = scroll;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static AuthFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AuthFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.auth_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AuthFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_sing_in;
      Button btnSingIn = rootView.findViewById(id);
      if (btnSingIn == null) {
        break missingId;
      }

      id = R.id.email;
      TextInputEditText email = rootView.findViewById(id);
      if (email == null) {
        break missingId;
      }

      id = R.id.email_container;
      TextInputLayout emailContainer = rootView.findViewById(id);
      if (emailContainer == null) {
        break missingId;
      }

      id = R.id.imageLogo;
      ImageView imageLogo = rootView.findViewById(id);
      if (imageLogo == null) {
        break missingId;
      }

      id = R.id.password;
      TextInputEditText password = rootView.findViewById(id);
      if (password == null) {
        break missingId;
      }

      id = R.id.password_container;
      TextInputLayout passwordContainer = rootView.findViewById(id);
      if (passwordContainer == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      ScrollView scroll = (ScrollView) rootView;

      return new AuthFragmentBinding((ScrollView) rootView, btnSingIn, email, emailContainer,
          imageLogo, password, passwordContainer, progressBar, scroll);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
