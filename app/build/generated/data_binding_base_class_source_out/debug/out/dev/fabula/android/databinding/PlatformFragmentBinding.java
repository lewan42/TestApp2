// Generated by view binder compiler. Do not edit!
package dev.fabula.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import dev.fabula.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PlatformFragmentBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnBridgeCrossing;

  @NonNull
  public final Button btnDimensionsCanopy;

  @NonNull
  public final Button btnDimensionsFence;

  @NonNull
  public final Button btnMeasurements;

  @NonNull
  public final Button btnReportCanopy;

  @NonNull
  public final Button btnReportPlatform;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final Button btnSupport;

  @NonNull
  public final MaterialCardView cardImagePhoto1;

  @NonNull
  public final MaterialCardView cardImagePhoto2;

  @NonNull
  public final TextInputLayout comment;

  @NonNull
  public final TextInputEditText commentValue;

  @NonNull
  public final TextInputLayout kmPath;

  @NonNull
  public final TextInputEditText kmPathValue;

  @NonNull
  public final LayoutHeaderBinding layoutHeader;

  @NonNull
  public final TextInputLayout numberPath;

  @NonNull
  public final TextInputEditText numberPathValue;

  @NonNull
  public final AppCompatImageButton photo1;

  @NonNull
  public final AppCompatImageButton photo2;

  @NonNull
  public final TextInputLayout piket;

  @NonNull
  public final TextInputEditText piketValue;

  @NonNull
  public final ScrollView scroll;

  @NonNull
  public final TextView tvFieldMustHave;

  @NonNull
  public final AutoCompleteTextView type1;

  @NonNull
  public final TextInputLayout type1Container;

  @NonNull
  public final AutoCompleteTextView type2;

  @NonNull
  public final TextInputLayout type2Container;

  private PlatformFragmentBinding(@NonNull ScrollView rootView, @NonNull Button btnBridgeCrossing,
      @NonNull Button btnDimensionsCanopy, @NonNull Button btnDimensionsFence,
      @NonNull Button btnMeasurements, @NonNull Button btnReportCanopy,
      @NonNull Button btnReportPlatform, @NonNull Button btnSave, @NonNull Button btnSupport,
      @NonNull MaterialCardView cardImagePhoto1, @NonNull MaterialCardView cardImagePhoto2,
      @NonNull TextInputLayout comment, @NonNull TextInputEditText commentValue,
      @NonNull TextInputLayout kmPath, @NonNull TextInputEditText kmPathValue,
      @NonNull LayoutHeaderBinding layoutHeader, @NonNull TextInputLayout numberPath,
      @NonNull TextInputEditText numberPathValue, @NonNull AppCompatImageButton photo1,
      @NonNull AppCompatImageButton photo2, @NonNull TextInputLayout piket,
      @NonNull TextInputEditText piketValue, @NonNull ScrollView scroll,
      @NonNull TextView tvFieldMustHave, @NonNull AutoCompleteTextView type1,
      @NonNull TextInputLayout type1Container, @NonNull AutoCompleteTextView type2,
      @NonNull TextInputLayout type2Container) {
    this.rootView = rootView;
    this.btnBridgeCrossing = btnBridgeCrossing;
    this.btnDimensionsCanopy = btnDimensionsCanopy;
    this.btnDimensionsFence = btnDimensionsFence;
    this.btnMeasurements = btnMeasurements;
    this.btnReportCanopy = btnReportCanopy;
    this.btnReportPlatform = btnReportPlatform;
    this.btnSave = btnSave;
    this.btnSupport = btnSupport;
    this.cardImagePhoto1 = cardImagePhoto1;
    this.cardImagePhoto2 = cardImagePhoto2;
    this.comment = comment;
    this.commentValue = commentValue;
    this.kmPath = kmPath;
    this.kmPathValue = kmPathValue;
    this.layoutHeader = layoutHeader;
    this.numberPath = numberPath;
    this.numberPathValue = numberPathValue;
    this.photo1 = photo1;
    this.photo2 = photo2;
    this.piket = piket;
    this.piketValue = piketValue;
    this.scroll = scroll;
    this.tvFieldMustHave = tvFieldMustHave;
    this.type1 = type1;
    this.type1Container = type1Container;
    this.type2 = type2;
    this.type2Container = type2Container;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static PlatformFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlatformFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.platform_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlatformFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_bridge_crossing;
      Button btnBridgeCrossing = rootView.findViewById(id);
      if (btnBridgeCrossing == null) {
        break missingId;
      }

      id = R.id.btn_dimensions_canopy;
      Button btnDimensionsCanopy = rootView.findViewById(id);
      if (btnDimensionsCanopy == null) {
        break missingId;
      }

      id = R.id.btn_dimensions_fence;
      Button btnDimensionsFence = rootView.findViewById(id);
      if (btnDimensionsFence == null) {
        break missingId;
      }

      id = R.id.btn_measurements;
      Button btnMeasurements = rootView.findViewById(id);
      if (btnMeasurements == null) {
        break missingId;
      }

      id = R.id.btnReportCanopy;
      Button btnReportCanopy = rootView.findViewById(id);
      if (btnReportCanopy == null) {
        break missingId;
      }

      id = R.id.btnReportPlatform;
      Button btnReportPlatform = rootView.findViewById(id);
      if (btnReportPlatform == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = rootView.findViewById(id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_support;
      Button btnSupport = rootView.findViewById(id);
      if (btnSupport == null) {
        break missingId;
      }

      id = R.id.card_image_photo1;
      MaterialCardView cardImagePhoto1 = rootView.findViewById(id);
      if (cardImagePhoto1 == null) {
        break missingId;
      }

      id = R.id.card_image_photo2;
      MaterialCardView cardImagePhoto2 = rootView.findViewById(id);
      if (cardImagePhoto2 == null) {
        break missingId;
      }

      id = R.id.comment;
      TextInputLayout comment = rootView.findViewById(id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.comment_value;
      TextInputEditText commentValue = rootView.findViewById(id);
      if (commentValue == null) {
        break missingId;
      }

      id = R.id.km_path;
      TextInputLayout kmPath = rootView.findViewById(id);
      if (kmPath == null) {
        break missingId;
      }

      id = R.id.km_path_value;
      TextInputEditText kmPathValue = rootView.findViewById(id);
      if (kmPathValue == null) {
        break missingId;
      }

      id = R.id.layout_header;
      View layoutHeader = rootView.findViewById(id);
      if (layoutHeader == null) {
        break missingId;
      }
      LayoutHeaderBinding binding_layoutHeader = LayoutHeaderBinding.bind(layoutHeader);

      id = R.id.number_path;
      TextInputLayout numberPath = rootView.findViewById(id);
      if (numberPath == null) {
        break missingId;
      }

      id = R.id.number_path_value;
      TextInputEditText numberPathValue = rootView.findViewById(id);
      if (numberPathValue == null) {
        break missingId;
      }

      id = R.id.photo1;
      AppCompatImageButton photo1 = rootView.findViewById(id);
      if (photo1 == null) {
        break missingId;
      }

      id = R.id.photo2;
      AppCompatImageButton photo2 = rootView.findViewById(id);
      if (photo2 == null) {
        break missingId;
      }

      id = R.id.piket;
      TextInputLayout piket = rootView.findViewById(id);
      if (piket == null) {
        break missingId;
      }

      id = R.id.piket_value;
      TextInputEditText piketValue = rootView.findViewById(id);
      if (piketValue == null) {
        break missingId;
      }

      ScrollView scroll = (ScrollView) rootView;

      id = R.id.tv_field_must_have;
      TextView tvFieldMustHave = rootView.findViewById(id);
      if (tvFieldMustHave == null) {
        break missingId;
      }

      id = R.id.type1;
      AutoCompleteTextView type1 = rootView.findViewById(id);
      if (type1 == null) {
        break missingId;
      }

      id = R.id.type1_container;
      TextInputLayout type1Container = rootView.findViewById(id);
      if (type1Container == null) {
        break missingId;
      }

      id = R.id.type2;
      AutoCompleteTextView type2 = rootView.findViewById(id);
      if (type2 == null) {
        break missingId;
      }

      id = R.id.type2_container;
      TextInputLayout type2Container = rootView.findViewById(id);
      if (type2Container == null) {
        break missingId;
      }

      return new PlatformFragmentBinding((ScrollView) rootView, btnBridgeCrossing,
          btnDimensionsCanopy, btnDimensionsFence, btnMeasurements, btnReportCanopy,
          btnReportPlatform, btnSave, btnSupport, cardImagePhoto1, cardImagePhoto2, comment,
          commentValue, kmPath, kmPathValue, binding_layoutHeader, numberPath, numberPathValue,
          photo1, photo2, piket, piketValue, scroll, tvFieldMustHave, type1, type1Container, type2,
          type2Container);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
