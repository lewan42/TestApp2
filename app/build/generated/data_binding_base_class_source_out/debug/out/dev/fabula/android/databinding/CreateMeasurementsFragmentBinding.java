// Generated by view binder compiler. Do not edit!
package dev.fabula.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import dev.fabula.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CreateMeasurementsFragmentBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputLayout angleContainer;

  @NonNull
  public final Button btnCalibration;

  @NonNull
  public final Button btnComment;

  @NonNull
  public final Button btnNorms;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final MaterialCardView cardImageComment;

  @NonNull
  public final TextInputEditText comment;

  @NonNull
  public final TextInputLayout commentContainer;

  @NonNull
  public final TextInputEditText height;

  @NonNull
  public final AppCompatImageButton imageComment;

  @NonNull
  public final TextInputEditText kmPath;

  @NonNull
  public final TextInputLayout kmPathContainer;

  @NonNull
  public final LayoutHeaderBinding layoutHeader;

  @NonNull
  public final TextInputEditText length;

  @NonNull
  public final TextInputEditText numberPath;

  @NonNull
  public final TextInputLayout numberPathContainer;

  @NonNull
  public final TextInputEditText piket;

  @NonNull
  public final TextInputLayout piketContainer;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final ScrollView scroll;

  @NonNull
  public final TextInputLayout valueContainer;

  private CreateMeasurementsFragmentBinding(@NonNull ScrollView rootView,
      @NonNull TextInputLayout angleContainer, @NonNull Button btnCalibration,
      @NonNull Button btnComment, @NonNull Button btnNorms, @NonNull Button btnSave,
      @NonNull MaterialCardView cardImageComment, @NonNull TextInputEditText comment,
      @NonNull TextInputLayout commentContainer, @NonNull TextInputEditText height,
      @NonNull AppCompatImageButton imageComment, @NonNull TextInputEditText kmPath,
      @NonNull TextInputLayout kmPathContainer, @NonNull LayoutHeaderBinding layoutHeader,
      @NonNull TextInputEditText length, @NonNull TextInputEditText numberPath,
      @NonNull TextInputLayout numberPathContainer, @NonNull TextInputEditText piket,
      @NonNull TextInputLayout piketContainer, @NonNull RecyclerView recyclerView,
      @NonNull ScrollView scroll, @NonNull TextInputLayout valueContainer) {
    this.rootView = rootView;
    this.angleContainer = angleContainer;
    this.btnCalibration = btnCalibration;
    this.btnComment = btnComment;
    this.btnNorms = btnNorms;
    this.btnSave = btnSave;
    this.cardImageComment = cardImageComment;
    this.comment = comment;
    this.commentContainer = commentContainer;
    this.height = height;
    this.imageComment = imageComment;
    this.kmPath = kmPath;
    this.kmPathContainer = kmPathContainer;
    this.layoutHeader = layoutHeader;
    this.length = length;
    this.numberPath = numberPath;
    this.numberPathContainer = numberPathContainer;
    this.piket = piket;
    this.piketContainer = piketContainer;
    this.recyclerView = recyclerView;
    this.scroll = scroll;
    this.valueContainer = valueContainer;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static CreateMeasurementsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CreateMeasurementsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.create_measurements_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CreateMeasurementsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.angle_container;
      TextInputLayout angleContainer = rootView.findViewById(id);
      if (angleContainer == null) {
        break missingId;
      }

      id = R.id.btn_calibration;
      Button btnCalibration = rootView.findViewById(id);
      if (btnCalibration == null) {
        break missingId;
      }

      id = R.id.btn_comment;
      Button btnComment = rootView.findViewById(id);
      if (btnComment == null) {
        break missingId;
      }

      id = R.id.btn_norms;
      Button btnNorms = rootView.findViewById(id);
      if (btnNorms == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = rootView.findViewById(id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.card_image_comment;
      MaterialCardView cardImageComment = rootView.findViewById(id);
      if (cardImageComment == null) {
        break missingId;
      }

      id = R.id.comment;
      TextInputEditText comment = rootView.findViewById(id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.comment_container;
      TextInputLayout commentContainer = rootView.findViewById(id);
      if (commentContainer == null) {
        break missingId;
      }

      id = R.id.height;
      TextInputEditText height = rootView.findViewById(id);
      if (height == null) {
        break missingId;
      }

      id = R.id.image_comment;
      AppCompatImageButton imageComment = rootView.findViewById(id);
      if (imageComment == null) {
        break missingId;
      }

      id = R.id.km_path;
      TextInputEditText kmPath = rootView.findViewById(id);
      if (kmPath == null) {
        break missingId;
      }

      id = R.id.km_path_container;
      TextInputLayout kmPathContainer = rootView.findViewById(id);
      if (kmPathContainer == null) {
        break missingId;
      }

      id = R.id.layout_header;
      View layoutHeader = rootView.findViewById(id);
      if (layoutHeader == null) {
        break missingId;
      }
      LayoutHeaderBinding binding_layoutHeader = LayoutHeaderBinding.bind(layoutHeader);

      id = R.id.length;
      TextInputEditText length = rootView.findViewById(id);
      if (length == null) {
        break missingId;
      }

      id = R.id.number_path;
      TextInputEditText numberPath = rootView.findViewById(id);
      if (numberPath == null) {
        break missingId;
      }

      id = R.id.number_path_container;
      TextInputLayout numberPathContainer = rootView.findViewById(id);
      if (numberPathContainer == null) {
        break missingId;
      }

      id = R.id.piket;
      TextInputEditText piket = rootView.findViewById(id);
      if (piket == null) {
        break missingId;
      }

      id = R.id.piket_container;
      TextInputLayout piketContainer = rootView.findViewById(id);
      if (piketContainer == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      ScrollView scroll = (ScrollView) rootView;

      id = R.id.value_container;
      TextInputLayout valueContainer = rootView.findViewById(id);
      if (valueContainer == null) {
        break missingId;
      }

      return new CreateMeasurementsFragmentBinding((ScrollView) rootView, angleContainer,
          btnCalibration, btnComment, btnNorms, btnSave, cardImageComment, comment,
          commentContainer, height, imageComment, kmPath, kmPathContainer, binding_layoutHeader,
          length, numberPath, numberPathContainer, piket, piketContainer, recyclerView, scroll,
          valueContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
