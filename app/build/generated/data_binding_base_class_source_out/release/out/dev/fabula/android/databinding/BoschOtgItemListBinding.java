// Generated by view binder compiler. Do not edit!
package dev.fabula.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import dev.fabula.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BoschOtgItemListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final LinearLayout dateBlock;

  @NonNull
  public final LinearLayout functionBlock;

  @NonNull
  public final ImageView image;

  @NonNull
  public final LinearLayout measurementBlock;

  @NonNull
  public final LinearLayout operationBlock;

  @NonNull
  public final LinearLayout referenceBlock;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDateValue;

  @NonNull
  public final TextView tvFunction;

  @NonNull
  public final TextView tvFunctionValue;

  @NonNull
  public final TextView tvMeasurement;

  @NonNull
  public final TextView tvMeasurementUnit;

  @NonNull
  public final TextView tvMeasurementUnit1;

  @NonNull
  public final TextView tvMeasurementUnit2;

  @NonNull
  public final TextView tvMeasurementUnit3;

  @NonNull
  public final TextView tvMeasurementValue;

  @NonNull
  public final TextView tvMeasurementValue1;

  @NonNull
  public final TextView tvMeasurementValue2;

  @NonNull
  public final TextView tvMeasurementValue3;

  @NonNull
  public final TextView tvOperation;

  @NonNull
  public final TextView tvOperationValue;

  @NonNull
  public final TextView tvReference;

  @NonNull
  public final TextView tvReferenceValue;

  private BoschOtgItemListBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout container, @NonNull LinearLayout dateBlock,
      @NonNull LinearLayout functionBlock, @NonNull ImageView image,
      @NonNull LinearLayout measurementBlock, @NonNull LinearLayout operationBlock,
      @NonNull LinearLayout referenceBlock, @NonNull TextView tvDate, @NonNull TextView tvDateValue,
      @NonNull TextView tvFunction, @NonNull TextView tvFunctionValue,
      @NonNull TextView tvMeasurement, @NonNull TextView tvMeasurementUnit,
      @NonNull TextView tvMeasurementUnit1, @NonNull TextView tvMeasurementUnit2,
      @NonNull TextView tvMeasurementUnit3, @NonNull TextView tvMeasurementValue,
      @NonNull TextView tvMeasurementValue1, @NonNull TextView tvMeasurementValue2,
      @NonNull TextView tvMeasurementValue3, @NonNull TextView tvOperation,
      @NonNull TextView tvOperationValue, @NonNull TextView tvReference,
      @NonNull TextView tvReferenceValue) {
    this.rootView = rootView;
    this.container = container;
    this.dateBlock = dateBlock;
    this.functionBlock = functionBlock;
    this.image = image;
    this.measurementBlock = measurementBlock;
    this.operationBlock = operationBlock;
    this.referenceBlock = referenceBlock;
    this.tvDate = tvDate;
    this.tvDateValue = tvDateValue;
    this.tvFunction = tvFunction;
    this.tvFunctionValue = tvFunctionValue;
    this.tvMeasurement = tvMeasurement;
    this.tvMeasurementUnit = tvMeasurementUnit;
    this.tvMeasurementUnit1 = tvMeasurementUnit1;
    this.tvMeasurementUnit2 = tvMeasurementUnit2;
    this.tvMeasurementUnit3 = tvMeasurementUnit3;
    this.tvMeasurementValue = tvMeasurementValue;
    this.tvMeasurementValue1 = tvMeasurementValue1;
    this.tvMeasurementValue2 = tvMeasurementValue2;
    this.tvMeasurementValue3 = tvMeasurementValue3;
    this.tvOperation = tvOperation;
    this.tvOperationValue = tvOperationValue;
    this.tvReference = tvReference;
    this.tvReferenceValue = tvReferenceValue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BoschOtgItemListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BoschOtgItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bosch_otg_item_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BoschOtgItemListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      LinearLayout container = rootView.findViewById(id);
      if (container == null) {
        break missingId;
      }

      id = R.id.date_block;
      LinearLayout dateBlock = rootView.findViewById(id);
      if (dateBlock == null) {
        break missingId;
      }

      id = R.id.function_block;
      LinearLayout functionBlock = rootView.findViewById(id);
      if (functionBlock == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.measurement_block;
      LinearLayout measurementBlock = rootView.findViewById(id);
      if (measurementBlock == null) {
        break missingId;
      }

      id = R.id.operation_block;
      LinearLayout operationBlock = rootView.findViewById(id);
      if (operationBlock == null) {
        break missingId;
      }

      id = R.id.reference_block;
      LinearLayout referenceBlock = rootView.findViewById(id);
      if (referenceBlock == null) {
        break missingId;
      }

      id = R.id.tv_date;
      TextView tvDate = rootView.findViewById(id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_date_value;
      TextView tvDateValue = rootView.findViewById(id);
      if (tvDateValue == null) {
        break missingId;
      }

      id = R.id.tv_function;
      TextView tvFunction = rootView.findViewById(id);
      if (tvFunction == null) {
        break missingId;
      }

      id = R.id.tv_function_value;
      TextView tvFunctionValue = rootView.findViewById(id);
      if (tvFunctionValue == null) {
        break missingId;
      }

      id = R.id.tv_measurement;
      TextView tvMeasurement = rootView.findViewById(id);
      if (tvMeasurement == null) {
        break missingId;
      }

      id = R.id.tv_measurement_unit;
      TextView tvMeasurementUnit = rootView.findViewById(id);
      if (tvMeasurementUnit == null) {
        break missingId;
      }

      id = R.id.tv_measurement_unit1;
      TextView tvMeasurementUnit1 = rootView.findViewById(id);
      if (tvMeasurementUnit1 == null) {
        break missingId;
      }

      id = R.id.tv_measurement_unit2;
      TextView tvMeasurementUnit2 = rootView.findViewById(id);
      if (tvMeasurementUnit2 == null) {
        break missingId;
      }

      id = R.id.tv_measurement_unit3;
      TextView tvMeasurementUnit3 = rootView.findViewById(id);
      if (tvMeasurementUnit3 == null) {
        break missingId;
      }

      id = R.id.tv_measurement_value;
      TextView tvMeasurementValue = rootView.findViewById(id);
      if (tvMeasurementValue == null) {
        break missingId;
      }

      id = R.id.tv_measurement_value1;
      TextView tvMeasurementValue1 = rootView.findViewById(id);
      if (tvMeasurementValue1 == null) {
        break missingId;
      }

      id = R.id.tv_measurement_value2;
      TextView tvMeasurementValue2 = rootView.findViewById(id);
      if (tvMeasurementValue2 == null) {
        break missingId;
      }

      id = R.id.tv_measurement_value3;
      TextView tvMeasurementValue3 = rootView.findViewById(id);
      if (tvMeasurementValue3 == null) {
        break missingId;
      }

      id = R.id.tv_operation;
      TextView tvOperation = rootView.findViewById(id);
      if (tvOperation == null) {
        break missingId;
      }

      id = R.id.tv_operation_value;
      TextView tvOperationValue = rootView.findViewById(id);
      if (tvOperationValue == null) {
        break missingId;
      }

      id = R.id.tv_reference;
      TextView tvReference = rootView.findViewById(id);
      if (tvReference == null) {
        break missingId;
      }

      id = R.id.tv_reference_value;
      TextView tvReferenceValue = rootView.findViewById(id);
      if (tvReferenceValue == null) {
        break missingId;
      }

      return new BoschOtgItemListBinding((ConstraintLayout) rootView, container, dateBlock,
          functionBlock, image, measurementBlock, operationBlock, referenceBlock, tvDate,
          tvDateValue, tvFunction, tvFunctionValue, tvMeasurement, tvMeasurementUnit,
          tvMeasurementUnit1, tvMeasurementUnit2, tvMeasurementUnit3, tvMeasurementValue,
          tvMeasurementValue1, tvMeasurementValue2, tvMeasurementValue3, tvOperation,
          tvOperationValue, tvReference, tvReferenceValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
