// Generated by view binder compiler. Do not edit!
package dev.fabula.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import dev.fabula.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReportFragmentBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText block;

  @NonNull
  public final TextInputLayout blockContainer;

  @NonNull
  public final Button btnCreateReport;

  @NonNull
  public final Button btnDate;

  @NonNull
  public final TextInputEditText canopyType;

  @NonNull
  public final TextInputLayout canopyTypeContainer;

  @NonNull
  public final TextInputEditText certificate;

  @NonNull
  public final TextInputLayout certificateContainer;

  @NonNull
  public final TextView currentDate;

  @NonNull
  public final TextInputEditText descriptionProblems;

  @NonNull
  public final TextInputLayout descriptionProblemsContainer;

  @NonNull
  public final TextInputEditText direction;

  @NonNull
  public final TextInputLayout directionContainer;

  @NonNull
  public final TextInputEditText endKm;

  @NonNull
  public final TextInputLayout endKmContainer;

  @NonNull
  public final TextInputEditText endM;

  @NonNull
  public final TextInputLayout endMetrContainer;

  @NonNull
  public final TextInputEditText endPk;

  @NonNull
  public final TextInputLayout endPkContainer;

  @NonNull
  public final TextInputEditText h;

  @NonNull
  public final TextInputLayout hContainer;

  @NonNull
  public final TextInputEditText heightNorm;

  @NonNull
  public final TextInputLayout heightNormContainer;

  @NonNull
  public final LayoutHeaderBinding layoutHeader;

  @NonNull
  public final TextInputEditText numberPath;

  @NonNull
  public final TextInputLayout numberPathContainer;

  @NonNull
  public final TextInputEditText planPath;

  @NonNull
  public final TextInputLayout planPathContainer;

  @NonNull
  public final TextInputEditText position1;

  @NonNull
  public final TextInputLayout position1Container;

  @NonNull
  public final TextInputEditText position2;

  @NonNull
  public final TextInputLayout position2Container;

  @NonNull
  public final TextInputEditText position3;

  @NonNull
  public final TextInputLayout position3Container;

  @NonNull
  public final TextInputEditText r;

  @NonNull
  public final TextInputLayout rContainer;

  @NonNull
  public final TextInputEditText rangeCanopy;

  @NonNull
  public final TextInputLayout rangeCanopyContainer;

  @NonNull
  public final TextInputEditText rangeStep;

  @NonNull
  public final TextInputLayout rangeStepContainer;

  @NonNull
  public final ConstraintLayout reportToCanopy;

  @NonNull
  public final ConstraintLayout reportToPlatform;

  @NonNull
  public final TextInputEditText startKm;

  @NonNull
  public final TextInputEditText startKmCanopy;

  @NonNull
  public final TextInputLayout startKmContainer;

  @NonNull
  public final TextInputLayout startKmContainerCanopy;

  @NonNull
  public final TextInputEditText startM;

  @NonNull
  public final TextInputLayout startMetrContainer;

  @NonNull
  public final TextInputEditText startPk;

  @NonNull
  public final TextInputEditText startPkCanopy;

  @NonNull
  public final TextInputLayout startPkContainer;

  @NonNull
  public final TextInputLayout startPkContainerCanopy;

  @NonNull
  public final TextInputEditText userName1;

  @NonNull
  public final TextInputLayout userName1Container;

  @NonNull
  public final TextInputEditText userName2;

  @NonNull
  public final TextInputLayout userName2Container;

  @NonNull
  public final TextInputEditText userName3;

  @NonNull
  public final TextInputLayout userName3Container;

  @NonNull
  public final View view2;

  @NonNull
  public final View view3;

  @NonNull
  public final View view4;

  @NonNull
  public final View view5;

  @NonNull
  public final View view6;

  @NonNull
  public final View view7;

  @NonNull
  public final View view8;

  @NonNull
  public final View view9;

  @NonNull
  public final WebView webView;

  @NonNull
  public final TextInputEditText widthNorm;

  @NonNull
  public final TextInputLayout widthNormContainer;

  private ReportFragmentBinding(@NonNull ScrollView rootView, @NonNull TextInputEditText block,
      @NonNull TextInputLayout blockContainer, @NonNull Button btnCreateReport,
      @NonNull Button btnDate, @NonNull TextInputEditText canopyType,
      @NonNull TextInputLayout canopyTypeContainer, @NonNull TextInputEditText certificate,
      @NonNull TextInputLayout certificateContainer, @NonNull TextView currentDate,
      @NonNull TextInputEditText descriptionProblems,
      @NonNull TextInputLayout descriptionProblemsContainer, @NonNull TextInputEditText direction,
      @NonNull TextInputLayout directionContainer, @NonNull TextInputEditText endKm,
      @NonNull TextInputLayout endKmContainer, @NonNull TextInputEditText endM,
      @NonNull TextInputLayout endMetrContainer, @NonNull TextInputEditText endPk,
      @NonNull TextInputLayout endPkContainer, @NonNull TextInputEditText h,
      @NonNull TextInputLayout hContainer, @NonNull TextInputEditText heightNorm,
      @NonNull TextInputLayout heightNormContainer, @NonNull LayoutHeaderBinding layoutHeader,
      @NonNull TextInputEditText numberPath, @NonNull TextInputLayout numberPathContainer,
      @NonNull TextInputEditText planPath, @NonNull TextInputLayout planPathContainer,
      @NonNull TextInputEditText position1, @NonNull TextInputLayout position1Container,
      @NonNull TextInputEditText position2, @NonNull TextInputLayout position2Container,
      @NonNull TextInputEditText position3, @NonNull TextInputLayout position3Container,
      @NonNull TextInputEditText r, @NonNull TextInputLayout rContainer,
      @NonNull TextInputEditText rangeCanopy, @NonNull TextInputLayout rangeCanopyContainer,
      @NonNull TextInputEditText rangeStep, @NonNull TextInputLayout rangeStepContainer,
      @NonNull ConstraintLayout reportToCanopy, @NonNull ConstraintLayout reportToPlatform,
      @NonNull TextInputEditText startKm, @NonNull TextInputEditText startKmCanopy,
      @NonNull TextInputLayout startKmContainer, @NonNull TextInputLayout startKmContainerCanopy,
      @NonNull TextInputEditText startM, @NonNull TextInputLayout startMetrContainer,
      @NonNull TextInputEditText startPk, @NonNull TextInputEditText startPkCanopy,
      @NonNull TextInputLayout startPkContainer, @NonNull TextInputLayout startPkContainerCanopy,
      @NonNull TextInputEditText userName1, @NonNull TextInputLayout userName1Container,
      @NonNull TextInputEditText userName2, @NonNull TextInputLayout userName2Container,
      @NonNull TextInputEditText userName3, @NonNull TextInputLayout userName3Container,
      @NonNull View view2, @NonNull View view3, @NonNull View view4, @NonNull View view5,
      @NonNull View view6, @NonNull View view7, @NonNull View view8, @NonNull View view9,
      @NonNull WebView webView, @NonNull TextInputEditText widthNorm,
      @NonNull TextInputLayout widthNormContainer) {
    this.rootView = rootView;
    this.block = block;
    this.blockContainer = blockContainer;
    this.btnCreateReport = btnCreateReport;
    this.btnDate = btnDate;
    this.canopyType = canopyType;
    this.canopyTypeContainer = canopyTypeContainer;
    this.certificate = certificate;
    this.certificateContainer = certificateContainer;
    this.currentDate = currentDate;
    this.descriptionProblems = descriptionProblems;
    this.descriptionProblemsContainer = descriptionProblemsContainer;
    this.direction = direction;
    this.directionContainer = directionContainer;
    this.endKm = endKm;
    this.endKmContainer = endKmContainer;
    this.endM = endM;
    this.endMetrContainer = endMetrContainer;
    this.endPk = endPk;
    this.endPkContainer = endPkContainer;
    this.h = h;
    this.hContainer = hContainer;
    this.heightNorm = heightNorm;
    this.heightNormContainer = heightNormContainer;
    this.layoutHeader = layoutHeader;
    this.numberPath = numberPath;
    this.numberPathContainer = numberPathContainer;
    this.planPath = planPath;
    this.planPathContainer = planPathContainer;
    this.position1 = position1;
    this.position1Container = position1Container;
    this.position2 = position2;
    this.position2Container = position2Container;
    this.position3 = position3;
    this.position3Container = position3Container;
    this.r = r;
    this.rContainer = rContainer;
    this.rangeCanopy = rangeCanopy;
    this.rangeCanopyContainer = rangeCanopyContainer;
    this.rangeStep = rangeStep;
    this.rangeStepContainer = rangeStepContainer;
    this.reportToCanopy = reportToCanopy;
    this.reportToPlatform = reportToPlatform;
    this.startKm = startKm;
    this.startKmCanopy = startKmCanopy;
    this.startKmContainer = startKmContainer;
    this.startKmContainerCanopy = startKmContainerCanopy;
    this.startM = startM;
    this.startMetrContainer = startMetrContainer;
    this.startPk = startPk;
    this.startPkCanopy = startPkCanopy;
    this.startPkContainer = startPkContainer;
    this.startPkContainerCanopy = startPkContainerCanopy;
    this.userName1 = userName1;
    this.userName1Container = userName1Container;
    this.userName2 = userName2;
    this.userName2Container = userName2Container;
    this.userName3 = userName3;
    this.userName3Container = userName3Container;
    this.view2 = view2;
    this.view3 = view3;
    this.view4 = view4;
    this.view5 = view5;
    this.view6 = view6;
    this.view7 = view7;
    this.view8 = view8;
    this.view9 = view9;
    this.webView = webView;
    this.widthNorm = widthNorm;
    this.widthNormContainer = widthNormContainer;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ReportFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReportFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.report_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReportFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.block;
      TextInputEditText block = rootView.findViewById(id);
      if (block == null) {
        break missingId;
      }

      id = R.id.block_container;
      TextInputLayout blockContainer = rootView.findViewById(id);
      if (blockContainer == null) {
        break missingId;
      }

      id = R.id.btnCreateReport;
      Button btnCreateReport = rootView.findViewById(id);
      if (btnCreateReport == null) {
        break missingId;
      }

      id = R.id.btnDate;
      Button btnDate = rootView.findViewById(id);
      if (btnDate == null) {
        break missingId;
      }

      id = R.id.canopy_type;
      TextInputEditText canopyType = rootView.findViewById(id);
      if (canopyType == null) {
        break missingId;
      }

      id = R.id.canopy_type_container;
      TextInputLayout canopyTypeContainer = rootView.findViewById(id);
      if (canopyTypeContainer == null) {
        break missingId;
      }

      id = R.id.certificate;
      TextInputEditText certificate = rootView.findViewById(id);
      if (certificate == null) {
        break missingId;
      }

      id = R.id.certificate_container;
      TextInputLayout certificateContainer = rootView.findViewById(id);
      if (certificateContainer == null) {
        break missingId;
      }

      id = R.id.currentDate;
      TextView currentDate = rootView.findViewById(id);
      if (currentDate == null) {
        break missingId;
      }

      id = R.id.description_problems;
      TextInputEditText descriptionProblems = rootView.findViewById(id);
      if (descriptionProblems == null) {
        break missingId;
      }

      id = R.id.description_problems_container;
      TextInputLayout descriptionProblemsContainer = rootView.findViewById(id);
      if (descriptionProblemsContainer == null) {
        break missingId;
      }

      id = R.id.direction;
      TextInputEditText direction = rootView.findViewById(id);
      if (direction == null) {
        break missingId;
      }

      id = R.id.direction_container;
      TextInputLayout directionContainer = rootView.findViewById(id);
      if (directionContainer == null) {
        break missingId;
      }

      id = R.id.end_km;
      TextInputEditText endKm = rootView.findViewById(id);
      if (endKm == null) {
        break missingId;
      }

      id = R.id.end_km_container;
      TextInputLayout endKmContainer = rootView.findViewById(id);
      if (endKmContainer == null) {
        break missingId;
      }

      id = R.id.end_m;
      TextInputEditText endM = rootView.findViewById(id);
      if (endM == null) {
        break missingId;
      }

      id = R.id.end_metr_container;
      TextInputLayout endMetrContainer = rootView.findViewById(id);
      if (endMetrContainer == null) {
        break missingId;
      }

      id = R.id.end_pk;
      TextInputEditText endPk = rootView.findViewById(id);
      if (endPk == null) {
        break missingId;
      }

      id = R.id.end_pk_container;
      TextInputLayout endPkContainer = rootView.findViewById(id);
      if (endPkContainer == null) {
        break missingId;
      }

      id = R.id.h;
      TextInputEditText h = rootView.findViewById(id);
      if (h == null) {
        break missingId;
      }

      id = R.id.h_container;
      TextInputLayout hContainer = rootView.findViewById(id);
      if (hContainer == null) {
        break missingId;
      }

      id = R.id.height_norm;
      TextInputEditText heightNorm = rootView.findViewById(id);
      if (heightNorm == null) {
        break missingId;
      }

      id = R.id.height_norm_container;
      TextInputLayout heightNormContainer = rootView.findViewById(id);
      if (heightNormContainer == null) {
        break missingId;
      }

      id = R.id.layout_header;
      View layoutHeader = rootView.findViewById(id);
      if (layoutHeader == null) {
        break missingId;
      }
      LayoutHeaderBinding binding_layoutHeader = LayoutHeaderBinding.bind(layoutHeader);

      id = R.id.number_path;
      TextInputEditText numberPath = rootView.findViewById(id);
      if (numberPath == null) {
        break missingId;
      }

      id = R.id.number_path_container;
      TextInputLayout numberPathContainer = rootView.findViewById(id);
      if (numberPathContainer == null) {
        break missingId;
      }

      id = R.id.plan_path;
      TextInputEditText planPath = rootView.findViewById(id);
      if (planPath == null) {
        break missingId;
      }

      id = R.id.plan_path_container;
      TextInputLayout planPathContainer = rootView.findViewById(id);
      if (planPathContainer == null) {
        break missingId;
      }

      id = R.id.position1;
      TextInputEditText position1 = rootView.findViewById(id);
      if (position1 == null) {
        break missingId;
      }

      id = R.id.position1_container;
      TextInputLayout position1Container = rootView.findViewById(id);
      if (position1Container == null) {
        break missingId;
      }

      id = R.id.position2;
      TextInputEditText position2 = rootView.findViewById(id);
      if (position2 == null) {
        break missingId;
      }

      id = R.id.position2_container;
      TextInputLayout position2Container = rootView.findViewById(id);
      if (position2Container == null) {
        break missingId;
      }

      id = R.id.position3;
      TextInputEditText position3 = rootView.findViewById(id);
      if (position3 == null) {
        break missingId;
      }

      id = R.id.position3_container;
      TextInputLayout position3Container = rootView.findViewById(id);
      if (position3Container == null) {
        break missingId;
      }

      id = R.id.r;
      TextInputEditText r = rootView.findViewById(id);
      if (r == null) {
        break missingId;
      }

      id = R.id.r_container;
      TextInputLayout rContainer = rootView.findViewById(id);
      if (rContainer == null) {
        break missingId;
      }

      id = R.id.range_canopy;
      TextInputEditText rangeCanopy = rootView.findViewById(id);
      if (rangeCanopy == null) {
        break missingId;
      }

      id = R.id.range_canopy_container;
      TextInputLayout rangeCanopyContainer = rootView.findViewById(id);
      if (rangeCanopyContainer == null) {
        break missingId;
      }

      id = R.id.range_step;
      TextInputEditText rangeStep = rootView.findViewById(id);
      if (rangeStep == null) {
        break missingId;
      }

      id = R.id.range_step_container;
      TextInputLayout rangeStepContainer = rootView.findViewById(id);
      if (rangeStepContainer == null) {
        break missingId;
      }

      id = R.id.report_to_canopy;
      ConstraintLayout reportToCanopy = rootView.findViewById(id);
      if (reportToCanopy == null) {
        break missingId;
      }

      id = R.id.report_to_platform;
      ConstraintLayout reportToPlatform = rootView.findViewById(id);
      if (reportToPlatform == null) {
        break missingId;
      }

      id = R.id.start_km;
      TextInputEditText startKm = rootView.findViewById(id);
      if (startKm == null) {
        break missingId;
      }

      id = R.id.start_km_canopy;
      TextInputEditText startKmCanopy = rootView.findViewById(id);
      if (startKmCanopy == null) {
        break missingId;
      }

      id = R.id.start_km_container;
      TextInputLayout startKmContainer = rootView.findViewById(id);
      if (startKmContainer == null) {
        break missingId;
      }

      id = R.id.start_km_container_canopy;
      TextInputLayout startKmContainerCanopy = rootView.findViewById(id);
      if (startKmContainerCanopy == null) {
        break missingId;
      }

      id = R.id.start_m;
      TextInputEditText startM = rootView.findViewById(id);
      if (startM == null) {
        break missingId;
      }

      id = R.id.start_metr_container;
      TextInputLayout startMetrContainer = rootView.findViewById(id);
      if (startMetrContainer == null) {
        break missingId;
      }

      id = R.id.start_pk;
      TextInputEditText startPk = rootView.findViewById(id);
      if (startPk == null) {
        break missingId;
      }

      id = R.id.start_pk_canopy;
      TextInputEditText startPkCanopy = rootView.findViewById(id);
      if (startPkCanopy == null) {
        break missingId;
      }

      id = R.id.start_pk_container;
      TextInputLayout startPkContainer = rootView.findViewById(id);
      if (startPkContainer == null) {
        break missingId;
      }

      id = R.id.start_pk_container_canopy;
      TextInputLayout startPkContainerCanopy = rootView.findViewById(id);
      if (startPkContainerCanopy == null) {
        break missingId;
      }

      id = R.id.userName1;
      TextInputEditText userName1 = rootView.findViewById(id);
      if (userName1 == null) {
        break missingId;
      }

      id = R.id.userName1_container;
      TextInputLayout userName1Container = rootView.findViewById(id);
      if (userName1Container == null) {
        break missingId;
      }

      id = R.id.userName2;
      TextInputEditText userName2 = rootView.findViewById(id);
      if (userName2 == null) {
        break missingId;
      }

      id = R.id.userName2_container;
      TextInputLayout userName2Container = rootView.findViewById(id);
      if (userName2Container == null) {
        break missingId;
      }

      id = R.id.userName3;
      TextInputEditText userName3 = rootView.findViewById(id);
      if (userName3 == null) {
        break missingId;
      }

      id = R.id.userName3_container;
      TextInputLayout userName3Container = rootView.findViewById(id);
      if (userName3Container == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = rootView.findViewById(id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.view3;
      View view3 = rootView.findViewById(id);
      if (view3 == null) {
        break missingId;
      }

      id = R.id.view4;
      View view4 = rootView.findViewById(id);
      if (view4 == null) {
        break missingId;
      }

      id = R.id.view5;
      View view5 = rootView.findViewById(id);
      if (view5 == null) {
        break missingId;
      }

      id = R.id.view6;
      View view6 = rootView.findViewById(id);
      if (view6 == null) {
        break missingId;
      }

      id = R.id.view7;
      View view7 = rootView.findViewById(id);
      if (view7 == null) {
        break missingId;
      }

      id = R.id.view8;
      View view8 = rootView.findViewById(id);
      if (view8 == null) {
        break missingId;
      }

      id = R.id.view9;
      View view9 = rootView.findViewById(id);
      if (view9 == null) {
        break missingId;
      }

      id = R.id.webView;
      WebView webView = rootView.findViewById(id);
      if (webView == null) {
        break missingId;
      }

      id = R.id.width_norm;
      TextInputEditText widthNorm = rootView.findViewById(id);
      if (widthNorm == null) {
        break missingId;
      }

      id = R.id.width_norm_container;
      TextInputLayout widthNormContainer = rootView.findViewById(id);
      if (widthNormContainer == null) {
        break missingId;
      }

      return new ReportFragmentBinding((ScrollView) rootView, block, blockContainer,
          btnCreateReport, btnDate, canopyType, canopyTypeContainer, certificate,
          certificateContainer, currentDate, descriptionProblems, descriptionProblemsContainer,
          direction, directionContainer, endKm, endKmContainer, endM, endMetrContainer, endPk,
          endPkContainer, h, hContainer, heightNorm, heightNormContainer, binding_layoutHeader,
          numberPath, numberPathContainer, planPath, planPathContainer, position1,
          position1Container, position2, position2Container, position3, position3Container, r,
          rContainer, rangeCanopy, rangeCanopyContainer, rangeStep, rangeStepContainer,
          reportToCanopy, reportToPlatform, startKm, startKmCanopy, startKmContainer,
          startKmContainerCanopy, startM, startMetrContainer, startPk, startPkCanopy,
          startPkContainer, startPkContainerCanopy, userName1, userName1Container, userName2,
          userName2Container, userName3, userName3Container, view2, view3, view4, view5, view6,
          view7, view8, view9, webView, widthNorm, widthNormContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
